# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-demo-1    # TODO: update to cluster name
  GKE_ZONE: us-central1-c   # TODO: update to cluster zone


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD        

#    - name: Building and Pushing User-service
#      run: mvn package dockerfile:push --file user-service/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Push department-service
#      run: mvn package dockerfile:push --file department-service/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Push cloud-config-server
#      run: mvn package dockerfile:push --file cloud-config-server/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Push cloud-gateway
#      run: mvn package dockerfile:push --file cloud-gateway/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Push hystrix-dashboard
#      run: mvn package dockerfile:push --file hystrix-dashboard/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    - name: Build and Push service-registry
#      run: mvn package dockerfile:push --file service-registry/pom.xml
#      env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
#    - name: kubectl - Google Cloud GKE cluster.
#      uses: ameydev/gke-kubectl-action@master
#      env:
#        PROJECT_ID: ${{ env.PROJECT_ID }}
#        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
#        CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
#        ZONE_NAME: ${{ env.GKE_ZONE }}
#      with:
#        args: apply -f k8s/




